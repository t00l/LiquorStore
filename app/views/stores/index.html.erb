      <section class="hero">
        <div class="row">
          <div class="large-12 columns">
            <div class="main-wrapper">
              <h1>Party Cat</h1>
              <br/>
              <hr>
            </div>
          </div>
        </div>
        <div class="row">
          <div class="large-6 columns about-box">
            <div class="black-box">
              <h2>Encuentra tu botillería más cercana</h2>
              <p>Busca el local más cerca de tu casa, carrete, junta o malón. Podrás ver las mejores promociones, productos y rutas para que no tengas excusa para llegar con las manos vacías.</p> 
            </div>
          </div>
        </div>
      </section>

<p id="notice"><%= notice %></p>

<div id="demo">
</div>

<div class="map_container">
  <div id="DemoModal" class="reveal-modal" data-reveal aria-labelledby="firstModalTitle" aria-hidden="true" role="dialog">
      <div class="clasenombre"></div>
      <div class="clasehora"></div>
      <div class="clasedireccion"></div>
      <div class="clasestars"></div>
      <button class="button round" id="target" >Trazar Ruta</button>
      <a class="close-reveal-modal" aria-label="Close">&#215;</a>
  </div>
  <div id="geolocation" class="geolocation"></div>
  <div class="reveal-modal-bg" style="display: none"></div>
</div>

<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>

<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>

<script>


var handler = Gmaps.build('Google');
var current;


function initialize(){

  handler.buildMap({ internal: {id: 'geolocation'} }, function() {
    
    markers_json = <%=raw @hash.to_json %>;
    markers = _.map(markers_json, function(marker_json){

      marker = handler.addMarker(marker_json);
      _.extend(marker, marker_json);

      return marker;
    });

    getLocation();
    
    markers.map(function(elem, index) {

      google.maps.event.addListener(elem.getServiceObject(), "click", function(evt) {

        var id = elem.store_id,
            name = elem.store_name,
            name_norm = elem.store_name_norm,
            schedule = elem.store_schedule,
            image = elem.store_image,
            address = elem.store_address,
            rating = elem.store_rating,
            reverse_address = elem.store_location[0].data.formatted_address
            
        $(".clasenombre").html("<h1><a href='stores/"+name_norm.replace(' ','-').toLowerCase()+"'>"+name+" </a></h1>")
        $(".clasehora").html("<h3>"+schedule+"</h3>")
        $(".claseimagen").html("<img src="+image+">")
        $(".clasedireccion").html("<p>"+reverse_address+"</p>")
        $(".clasestars").html("<h5>"+Math.round(rating*10)/10+" / 5 </h5>")

        // $(document).foundation();
        // $('#DemoModal').modal('show');
        
        $("#DemoModal").removeClass('open', function(){
          deleteRoute();
        });
    
        $('#DemoModal').foundation('reveal', 'open');

        current = elem;

      });

    })

  });
  
}

function getLocation(){
  if(navigator.geolocation){
    navigator.geolocation.getCurrentPosition(displayOnMap);
  }
  else{
    navigator.geolocation.getCurrentPosition(displayOnMapError);
  }
};

// var markerLocation;

function displayOnMap(position){
  
  marker2 = handler.addMarker({

    lat: position.coords.latitude,
    lng: position.coords.longitude,

    picture: {
        url: "<%= image_url('cat.png') %>",
        width:  36,
        height: 36
        },
    infowindow:  "Aquí Estoy!"
  });

  handler.map.centerOn(marker2);
  handler.getMap().setZoom(14);
};

function displayOnMapError(position){
  
  marker2 = handler.addMarker({

    lat: -33.469120,
    lng: -70.641997,

    picture: {
        url: "<%= image_url('cat.png') %>",
        width:  36,
        height: 36
        }
  });
  handler.map.centerOn(marker2);
  handler.getMap().setZoom(15);
};



var directionsDisplay = new google.maps.DirectionsRenderer();
var directionsService = new google.maps.DirectionsService();

function calcRoute(origin, destination) {
  // var origin      = new google.maps.LatLng(-33.469120, -70.641997);
  // var destination = new google.maps.LatLng(-33.589120, -70.761997);
  var request = {
      origin:      origin,
      destination: destination,
      travelMode:  google.maps.TravelMode.DRIVING
  };
  directionsService.route(request, function(response, status) {
    if (status == google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(response);
    }
  });
}

function showRoute(locationMarker, destinationMarker){
  currentLat = locationMarker.serviceObject.position.k;
  currentLng = locationMarker.serviceObject.position.D;
  var origin = new google.maps.LatLng(currentLat, currentLng);
  var destination = new google.maps.LatLng(destinationMarker.lat, destinationMarker.lng);

  calcRoute(origin, destination);
  directionsDisplay.setMap(handler.getMap());
  directionsDisplay.setOptions( { suppressMarkers: true } );
}

function deleteRoute(){
  directionsDisplay.setMap(null);
  // handler.map.centerOn(marker2);
  // handler.getMap().setZoom(14);
}

initialize();


</script>

<script>
$(document).foundation();
$(document).on('opened.fndtn.reveal', '[data-reveal]', function () {
  handler.map.centerOn({ lat: current.store_lat - 0.014, lng: current.store_lng })
  handler.getMap().setZoom(14);
});

$(document).on('closed.fndtn.reveal', '[data-reveal]', function () {
  directionsDisplay.setMap(null);
  handler.map.centerOn({ lat: current.store_lat, lng: current.store_lng })

});

$( "#target" ).click(function() {
  showRoute(marker2, current);
  // handler.map.centerOn(marker2)
  // handler.getMap().setZoom(10);
  // handler.map.centerOn({ lat: (current.store_lat + marker2.store_lat)/2 - 0.014, lng: (current.store_lng + marker2.store_lng)/2 })

});

</script>
